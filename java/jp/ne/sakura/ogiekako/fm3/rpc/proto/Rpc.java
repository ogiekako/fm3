// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jp/ne/sakura/ogiekako/fm/rpc/proto/rpc.proto

package jp.ne.sakura.ogiekako.fm3.rpc.proto;

import com.google.protobuf.AbstractMessage;

public final class Rpc {
  private Rpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code Player}
   */
  public enum Player
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HITHER = 1;</code>
     *
     * <pre>
     * The first player
     * </pre>
     */
    HITHER(0, 1),
    /**
     * <code>YONDER = 2;</code>
     *
     * <pre>
     * The second player
     * </pre>
     */
    YONDER(1, 2),
    ;

    /**
     * <code>HITHER = 1;</code>
     *
     * <pre>
     * The first player
     * </pre>
     */
    public static final int HITHER_VALUE = 1;
    /**
     * <code>YONDER = 2;</code>
     *
     * <pre>
     * The second player
     * </pre>
     */
    public static final int YONDER_VALUE = 2;


    public final int getNumber() { return value; }

    public static Player valueOf(int value) {
      switch (value) {
        case 1: return HITHER;
        case 2: return YONDER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Player>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Player>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Player>() {
            public Player findValueByNumber(int number) {
              return Player.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Rpc.getDescriptor().getEnumTypes().get(0);
    }

    private static final Player[] VALUES = values();

    public static Player valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Player(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Player)
  }

  public interface CellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Cell)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 row = 1;</code>
     */
    boolean hasRow();
    /**
     * <code>optional int32 row = 1;</code>
     */
    int getRow();

    /**
     * <code>optional int32 col = 2;</code>
     */
    boolean hasCol();
    /**
     * <code>optional int32 col = 2;</code>
     */
    int getCol();
  }
  /**
   * Protobuf type {@code Cell}
   */
  public static final class Cell extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Cell)
      CellOrBuilder {
    // Use Cell.newBuilder() to construct.
    private Cell(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Cell(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Cell defaultInstance;
    public static Cell getDefaultInstance() {
      return defaultInstance;
    }

    public Cell getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Cell(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              row_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              col_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Cell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Cell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Cell.class, Rpc.Cell.Builder.class);
    }

    public static com.google.protobuf.Parser<Cell> PARSER =
        new com.google.protobuf.AbstractParser<Cell>() {
      public Cell parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Cell(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Cell> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROW_FIELD_NUMBER = 1;
    private int row_;
    /**
     * <code>optional int32 row = 1;</code>
     */
    public boolean hasRow() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 row = 1;</code>
     */
    public int getRow() {
      return row_;
    }

    public static final int COL_FIELD_NUMBER = 2;
    private int col_;
    /**
     * <code>optional int32 col = 2;</code>
     */
    public boolean hasCol() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 col = 2;</code>
     */
    public int getCol() {
      return col_;
    }

    private void initFields() {
      row_ = 0;
      col_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, row_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, col_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, row_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, col_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Cell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Cell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Cell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Cell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Cell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Cell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Cell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Cell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Cell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Cell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Cell prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Cell}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Cell)
        Rpc.CellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Cell_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Cell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Cell.class, Rpc.Cell.Builder.class);
      }

      // Construct using Rpc.Cell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        row_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        col_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Cell_descriptor;
      }

      public Rpc.Cell getDefaultInstanceForType() {
        return Rpc.Cell.getDefaultInstance();
      }

      public Rpc.Cell build() {
        Rpc.Cell result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Cell buildPartial() {
        Rpc.Cell result = new Rpc.Cell(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.row_ = row_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.col_ = col_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Cell) {
          return mergeFrom((Rpc.Cell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Cell other) {
        if (other == Rpc.Cell.getDefaultInstance()) return this;
        if (other.hasRow()) {
          setRow(other.getRow());
        }
        if (other.hasCol()) {
          setCol(other.getCol());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Cell parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Cell) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int row_ ;
      /**
       * <code>optional int32 row = 1;</code>
       */
      public boolean hasRow() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 row = 1;</code>
       */
      public int getRow() {
        return row_;
      }
      /**
       * <code>optional int32 row = 1;</code>
       */
      public Builder setRow(int value) {
        bitField0_ |= 0x00000001;
        row_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 row = 1;</code>
       */
      public Builder clearRow() {
        bitField0_ = (bitField0_ & ~0x00000001);
        row_ = 0;
        onChanged();
        return this;
      }

      private int col_ ;
      /**
       * <code>optional int32 col = 2;</code>
       */
      public boolean hasCol() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 col = 2;</code>
       */
      public int getCol() {
        return col_;
      }
      /**
       * <code>optional int32 col = 2;</code>
       */
      public Builder setCol(int value) {
        bitField0_ |= 0x00000002;
        col_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 col = 2;</code>
       */
      public Builder clearCol() {
        bitField0_ = (bitField0_ & ~0x00000002);
        col_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Cell)
    }

    static {
      defaultInstance = new Cell(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Cell)
  }

  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    boolean hasCell();
    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    Rpc.Cell getCell();
    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    Rpc.CellOrBuilder getCellOrBuilder();

    /**
     * <code>optional .Player owner = 2;</code>
     */
    boolean hasOwner();
    /**
     * <code>optional .Player owner = 2;</code>
     */
    Rpc.Player getOwner();
  }
  /**
   * Protobuf type {@code Position}
   */
  public static final class Position extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Position)
      PositionOrBuilder {
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Position(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Position defaultInstance;
    public static Position getDefaultInstance() {
      return defaultInstance;
    }

    public Position getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Rpc.Cell.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = cell_.toBuilder();
              }
              cell_ = input.readMessage(Rpc.Cell.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cell_);
                cell_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Rpc.Player value = Rpc.Player.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                owner_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Position.class, Rpc.Position.Builder.class);
    }

    public static com.google.protobuf.Parser<Position> PARSER =
        new com.google.protobuf.AbstractParser<Position>() {
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Position(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CELL_FIELD_NUMBER = 1;
    private Rpc.Cell cell_;
    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    public boolean hasCell() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    public Rpc.Cell getCell() {
      return cell_;
    }
    /**
     * <code>optional .Cell cell = 1;</code>
     *
     * <pre>
     * If not set, the position is in hand.
     * </pre>
     */
    public Rpc.CellOrBuilder getCellOrBuilder() {
      return cell_;
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private Rpc.Player owner_;
    /**
     * <code>optional .Player owner = 2;</code>
     */
    public boolean hasOwner() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Player owner = 2;</code>
     */
    public Rpc.Player getOwner() {
      return owner_;
    }

    private void initFields() {
      cell_ = Rpc.Cell.getDefaultInstance();
      owner_ = Rpc.Player.HITHER;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, cell_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, owner_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cell_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, owner_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Position prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Position}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Position)
        Rpc.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Position.class, Rpc.Position.Builder.class);
      }

      // Construct using Rpc.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCellFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cellBuilder_ == null) {
          cell_ = Rpc.Cell.getDefaultInstance();
        } else {
          cellBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        owner_ = Rpc.Player.HITHER;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Position_descriptor;
      }

      public Rpc.Position getDefaultInstanceForType() {
        return Rpc.Position.getDefaultInstance();
      }

      public Rpc.Position build() {
        Rpc.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Position buildPartial() {
        Rpc.Position result = new Rpc.Position(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (cellBuilder_ == null) {
          result.cell_ = cell_;
        } else {
          result.cell_ = cellBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.owner_ = owner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Position) {
          return mergeFrom((Rpc.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Position other) {
        if (other == Rpc.Position.getDefaultInstance()) return this;
        if (other.hasCell()) {
          mergeCell(other.getCell());
        }
        if (other.hasOwner()) {
          setOwner(other.getOwner());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Position) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Rpc.Cell cell_ = Rpc.Cell.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder> cellBuilder_;
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public boolean hasCell() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Rpc.Cell getCell() {
        if (cellBuilder_ == null) {
          return cell_;
        } else {
          return cellBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Builder setCell(Rpc.Cell value) {
        if (cellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cell_ = value;
          onChanged();
        } else {
          cellBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Builder setCell(
          Rpc.Cell.Builder builderForValue) {
        if (cellBuilder_ == null) {
          cell_ = builderForValue.build();
          onChanged();
        } else {
          cellBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Builder mergeCell(Rpc.Cell value) {
        if (cellBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              cell_ != Rpc.Cell.getDefaultInstance()) {
            cell_ =
              Rpc.Cell.newBuilder(cell_).mergeFrom(value).buildPartial();
          } else {
            cell_ = value;
          }
          onChanged();
        } else {
          cellBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Builder clearCell() {
        if (cellBuilder_ == null) {
          cell_ = Rpc.Cell.getDefaultInstance();
          onChanged();
        } else {
          cellBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Rpc.Cell.Builder getCellBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCellFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      public Rpc.CellOrBuilder getCellOrBuilder() {
        if (cellBuilder_ != null) {
          return cellBuilder_.getMessageOrBuilder();
        } else {
          return cell_;
        }
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the position is in hand.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>
          getCellFieldBuilder() {
        if (cellBuilder_ == null) {
          cellBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>(
                  getCell(),
                  getParentForChildren(),
                  isClean());
          cell_ = null;
        }
        return cellBuilder_;
      }

      private Rpc.Player owner_ = Rpc.Player.HITHER;
      /**
       * <code>optional .Player owner = 2;</code>
       */
      public boolean hasOwner() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Player owner = 2;</code>
       */
      public Rpc.Player getOwner() {
        return owner_;
      }
      /**
       * <code>optional .Player owner = 2;</code>
       */
      public Builder setOwner(Rpc.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Player owner = 2;</code>
       */
      public Builder clearOwner() {
        bitField0_ = (bitField0_ & ~0x00000002);
        owner_ = Rpc.Player.HITHER;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Position)
    }

    static {
      defaultInstance = new Position(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Position)
  }

  public interface PieceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Piece)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Piece.Type type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>optional .Piece.Type type = 1;</code>
     */
    Rpc.Piece.Type getType();
  }
  /**
   * Protobuf type {@code Piece}
   */
  public static final class Piece extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Piece)
      PieceOrBuilder {
    // Use Piece.newBuilder() to construct.
    private Piece(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Piece(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Piece defaultInstance;
    public static Piece getDefaultInstance() {
      return defaultInstance;
    }

    public Piece getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Piece(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Rpc.Piece.Type value = Rpc.Piece.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Piece_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Piece_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Piece.class, Rpc.Piece.Builder.class);
    }

    public static com.google.protobuf.Parser<Piece> PARSER =
        new com.google.protobuf.AbstractParser<Piece>() {
      public Piece parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Piece(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Piece> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Piece.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 1;</code>
       */
      NONE(0, 1),
      /**
       * <code>FU = 2;</code>
       */
      FU(1, 2),
      /**
       * <code>KYO = 3;</code>
       */
      KYO(2, 3),
      /**
       * <code>KEI = 4;</code>
       */
      KEI(3, 4),
      /**
       * <code>GIN = 5;</code>
       */
      GIN(4, 5),
      /**
       * <code>KIN = 6;</code>
       */
      KIN(5, 6),
      /**
       * <code>KAKU = 7;</code>
       */
      KAKU(6, 7),
      /**
       * <code>HI = 8;</code>
       */
      HI(7, 8),
      /**
       * <code>OU = 9;</code>
       */
      OU(8, 9),
      /**
       * <code>TO = 10;</code>
       */
      TO(9, 10),
      /**
       * <code>NARI_KYO = 11;</code>
       */
      NARI_KYO(10, 11),
      /**
       * <code>NARI_KEI = 12;</code>
       */
      NARI_KEI(11, 12),
      /**
       * <code>NARI_GIN = 13;</code>
       */
      NARI_GIN(12, 13),
      /**
       * <code>UMA = 14;</code>
       */
      UMA(13, 14),
      /**
       * <code>RYU = 15;</code>
       */
      RYU(14, 15),
      ;

      /**
       * <code>NONE = 1;</code>
       */
      public static final int NONE_VALUE = 1;
      /**
       * <code>FU = 2;</code>
       */
      public static final int FU_VALUE = 2;
      /**
       * <code>KYO = 3;</code>
       */
      public static final int KYO_VALUE = 3;
      /**
       * <code>KEI = 4;</code>
       */
      public static final int KEI_VALUE = 4;
      /**
       * <code>GIN = 5;</code>
       */
      public static final int GIN_VALUE = 5;
      /**
       * <code>KIN = 6;</code>
       */
      public static final int KIN_VALUE = 6;
      /**
       * <code>KAKU = 7;</code>
       */
      public static final int KAKU_VALUE = 7;
      /**
       * <code>HI = 8;</code>
       */
      public static final int HI_VALUE = 8;
      /**
       * <code>OU = 9;</code>
       */
      public static final int OU_VALUE = 9;
      /**
       * <code>TO = 10;</code>
       */
      public static final int TO_VALUE = 10;
      /**
       * <code>NARI_KYO = 11;</code>
       */
      public static final int NARI_KYO_VALUE = 11;
      /**
       * <code>NARI_KEI = 12;</code>
       */
      public static final int NARI_KEI_VALUE = 12;
      /**
       * <code>NARI_GIN = 13;</code>
       */
      public static final int NARI_GIN_VALUE = 13;
      /**
       * <code>UMA = 14;</code>
       */
      public static final int UMA_VALUE = 14;
      /**
       * <code>RYU = 15;</code>
       */
      public static final int RYU_VALUE = 15;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 1: return NONE;
          case 2: return FU;
          case 3: return KYO;
          case 4: return KEI;
          case 5: return GIN;
          case 6: return KIN;
          case 7: return KAKU;
          case 8: return HI;
          case 9: return OU;
          case 10: return TO;
          case 11: return NARI_KYO;
          case 12: return NARI_KEI;
          case 13: return NARI_GIN;
          case 14: return UMA;
          case 15: return RYU;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Rpc.Piece.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Piece.Type)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private Rpc.Piece.Type type_;
    /**
     * <code>optional .Piece.Type type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Piece.Type type = 1;</code>
     */
    public Rpc.Piece.Type getType() {
      return type_;
    }

    private void initFields() {
      type_ = Rpc.Piece.Type.NONE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Piece parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Piece parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Piece parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Piece parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Piece parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Piece parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Piece parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Piece parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Piece parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Piece parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Piece prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Piece}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Piece)
        Rpc.PieceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Piece_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Piece_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Piece.class, Rpc.Piece.Builder.class);
      }

      // Construct using Rpc.Piece.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = Rpc.Piece.Type.NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Piece_descriptor;
      }

      public Rpc.Piece getDefaultInstanceForType() {
        return Rpc.Piece.getDefaultInstance();
      }

      public Rpc.Piece build() {
        Rpc.Piece result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Piece buildPartial() {
        Rpc.Piece result = new Rpc.Piece(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Piece) {
          return mergeFrom((Rpc.Piece)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Piece other) {
        if (other == Rpc.Piece.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Piece parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Piece) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Rpc.Piece.Type type_ = Rpc.Piece.Type.NONE;
      /**
       * <code>optional .Piece.Type type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Piece.Type type = 1;</code>
       */
      public Rpc.Piece.Type getType() {
        return type_;
      }
      /**
       * <code>optional .Piece.Type type = 1;</code>
       */
      public Builder setType(Rpc.Piece.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Piece.Type type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = Rpc.Piece.Type.NONE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Piece)
    }

    static {
      defaultInstance = new Piece(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Piece)
  }

  public interface PiecePositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PiecePosition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Piece piece = 1;</code>
     */
    boolean hasPiece();
    /**
     * <code>optional .Piece piece = 1;</code>
     */
    Rpc.Piece getPiece();
    /**
     * <code>optional .Piece piece = 1;</code>
     */
    Rpc.PieceOrBuilder getPieceOrBuilder();

    /**
     * <code>optional .Position position = 2;</code>
     */
    boolean hasPosition();
    /**
     * <code>optional .Position position = 2;</code>
     */
    Rpc.Position getPosition();
    /**
     * <code>optional .Position position = 2;</code>
     */
    Rpc.PositionOrBuilder getPositionOrBuilder();
  }
  /**
   * Protobuf type {@code PiecePosition}
   */
  public static final class PiecePosition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PiecePosition)
      PiecePositionOrBuilder {
    // Use PiecePosition.newBuilder() to construct.
    private PiecePosition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PiecePosition(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PiecePosition defaultInstance;
    public static PiecePosition getDefaultInstance() {
      return defaultInstance;
    }

    public PiecePosition getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PiecePosition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Rpc.Piece.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = piece_.toBuilder();
              }
              piece_ = input.readMessage(Rpc.Piece.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(piece_);
                piece_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              Rpc.Position.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(Rpc.Position.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_PiecePosition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_PiecePosition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.PiecePosition.class, Rpc.PiecePosition.Builder.class);
    }

    public static com.google.protobuf.Parser<PiecePosition> PARSER =
        new com.google.protobuf.AbstractParser<PiecePosition>() {
      public PiecePosition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PiecePosition(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PiecePosition> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PIECE_FIELD_NUMBER = 1;
    private Rpc.Piece piece_;
    /**
     * <code>optional .Piece piece = 1;</code>
     */
    public boolean hasPiece() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Piece piece = 1;</code>
     */
    public Rpc.Piece getPiece() {
      return piece_;
    }
    /**
     * <code>optional .Piece piece = 1;</code>
     */
    public Rpc.PieceOrBuilder getPieceOrBuilder() {
      return piece_;
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private Rpc.Position position_;
    /**
     * <code>optional .Position position = 2;</code>
     */
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Position position = 2;</code>
     */
    public Rpc.Position getPosition() {
      return position_;
    }
    /**
     * <code>optional .Position position = 2;</code>
     */
    public Rpc.PositionOrBuilder getPositionOrBuilder() {
      return position_;
    }

    private void initFields() {
      piece_ = Rpc.Piece.getDefaultInstance();
      position_ = Rpc.Position.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, piece_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, position_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, piece_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, position_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.PiecePosition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.PiecePosition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.PiecePosition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.PiecePosition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.PiecePosition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.PiecePosition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.PiecePosition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.PiecePosition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.PiecePosition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.PiecePosition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.PiecePosition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PiecePosition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PiecePosition)
        Rpc.PiecePositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_PiecePosition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_PiecePosition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.PiecePosition.class, Rpc.PiecePosition.Builder.class);
      }

      // Construct using Rpc.PiecePosition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPieceFieldBuilder();
          getPositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (pieceBuilder_ == null) {
          piece_ = Rpc.Piece.getDefaultInstance();
        } else {
          pieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (positionBuilder_ == null) {
          position_ = Rpc.Position.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_PiecePosition_descriptor;
      }

      public Rpc.PiecePosition getDefaultInstanceForType() {
        return Rpc.PiecePosition.getDefaultInstance();
      }

      public Rpc.PiecePosition build() {
        Rpc.PiecePosition result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.PiecePosition buildPartial() {
        Rpc.PiecePosition result = new Rpc.PiecePosition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (pieceBuilder_ == null) {
          result.piece_ = piece_;
        } else {
          result.piece_ = pieceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.PiecePosition) {
          return mergeFrom((Rpc.PiecePosition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.PiecePosition other) {
        if (other == Rpc.PiecePosition.getDefaultInstance()) return this;
        if (other.hasPiece()) {
          mergePiece(other.getPiece());
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.PiecePosition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.PiecePosition) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Rpc.Piece piece_ = Rpc.Piece.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder> pieceBuilder_;
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public boolean hasPiece() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Rpc.Piece getPiece() {
        if (pieceBuilder_ == null) {
          return piece_;
        } else {
          return pieceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Builder setPiece(Rpc.Piece value) {
        if (pieceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          piece_ = value;
          onChanged();
        } else {
          pieceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Builder setPiece(
          Rpc.Piece.Builder builderForValue) {
        if (pieceBuilder_ == null) {
          piece_ = builderForValue.build();
          onChanged();
        } else {
          pieceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Builder mergePiece(Rpc.Piece value) {
        if (pieceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              piece_ != Rpc.Piece.getDefaultInstance()) {
            piece_ =
              Rpc.Piece.newBuilder(piece_).mergeFrom(value).buildPartial();
          } else {
            piece_ = value;
          }
          onChanged();
        } else {
          pieceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Builder clearPiece() {
        if (pieceBuilder_ == null) {
          piece_ = Rpc.Piece.getDefaultInstance();
          onChanged();
        } else {
          pieceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Rpc.Piece.Builder getPieceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPieceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      public Rpc.PieceOrBuilder getPieceOrBuilder() {
        if (pieceBuilder_ != null) {
          return pieceBuilder_.getMessageOrBuilder();
        } else {
          return piece_;
        }
      }
      /**
       * <code>optional .Piece piece = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder>
          getPieceFieldBuilder() {
        if (pieceBuilder_ == null) {
          pieceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder>(
                  getPiece(),
                  getParentForChildren(),
                  isClean());
          piece_ = null;
        }
        return pieceBuilder_;
      }

      private Rpc.Position position_ = Rpc.Position.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Position, Rpc.Position.Builder, Rpc.PositionOrBuilder> positionBuilder_;
      /**
       * <code>optional .Position position = 2;</code>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Rpc.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Builder setPosition(Rpc.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Builder setPosition(
          Rpc.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Builder mergePosition(Rpc.Position value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              position_ != Rpc.Position.getDefaultInstance()) {
            position_ =
              Rpc.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = Rpc.Position.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Rpc.Position.Builder getPositionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      public Rpc.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      /**
       * <code>optional .Position position = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Position, Rpc.Position.Builder, Rpc.PositionOrBuilder>
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.Position, Rpc.Position.Builder, Rpc.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PiecePosition)
    }

    static {
      defaultInstance = new PiecePosition(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PiecePosition)
  }

  public interface StateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:State)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    java.util.List<Rpc.PiecePosition>
        getPiecePositionList();
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    Rpc.PiecePosition getPiecePosition(int index);
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    int getPiecePositionCount();
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    java.util.List<? extends Rpc.PiecePositionOrBuilder>
        getPiecePositionOrBuilderList();
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    Rpc.PiecePositionOrBuilder getPiecePositionOrBuilder(
        int index);

    /**
     * <code>optional .Player turn = 2;</code>
     */
    boolean hasTurn();
    /**
     * <code>optional .Player turn = 2;</code>
     */
    Rpc.Player getTurn();

    /**
     * <code>optional int32 height = 3;</code>
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 3;</code>
     */
    int getHeight();

    /**
     * <code>optional int32 width = 4;</code>
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 4;</code>
     */
    int getWidth();
  }
  /**
   * Protobuf type {@code State}
   */
  public static final class State extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:State)
      StateOrBuilder {
    // Use State.newBuilder() to construct.
    private State(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private State(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final State defaultInstance;
    public static State getDefaultInstance() {
      return defaultInstance;
    }

    public State getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                piecePosition_ = new java.util.ArrayList<Rpc.PiecePosition>();
                mutable_bitField0_ |= 0x00000001;
              }
              piecePosition_.add(input.readMessage(Rpc.PiecePosition.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Rpc.Player value = Rpc.Player.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                turn_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              height_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              width_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          piecePosition_ = java.util.Collections.unmodifiableList(piecePosition_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_State_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.State.class, Rpc.State.Builder.class);
    }

    public static com.google.protobuf.Parser<State> PARSER =
        new com.google.protobuf.AbstractParser<State>() {
      public State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new State(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<State> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PIECE_POSITION_FIELD_NUMBER = 1;
    private java.util.List<Rpc.PiecePosition> piecePosition_;
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    public java.util.List<Rpc.PiecePosition> getPiecePositionList() {
      return piecePosition_;
    }
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    public java.util.List<? extends Rpc.PiecePositionOrBuilder>
        getPiecePositionOrBuilderList() {
      return piecePosition_;
    }
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    public int getPiecePositionCount() {
      return piecePosition_.size();
    }
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    public Rpc.PiecePosition getPiecePosition(int index) {
      return piecePosition_.get(index);
    }
    /**
     * <code>repeated .PiecePosition piece_position = 1;</code>
     */
    public Rpc.PiecePositionOrBuilder getPiecePositionOrBuilder(
        int index) {
      return piecePosition_.get(index);
    }

    public static final int TURN_FIELD_NUMBER = 2;
    private Rpc.Player turn_;
    /**
     * <code>optional .Player turn = 2;</code>
     */
    public boolean hasTurn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Player turn = 2;</code>
     */
    public Rpc.Player getTurn() {
      return turn_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 3;
    private int height_;
    /**
     * <code>optional int32 height = 3;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 height = 3;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int WIDTH_FIELD_NUMBER = 4;
    private int width_;
    /**
     * <code>optional int32 width = 4;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 width = 4;</code>
     */
    public int getWidth() {
      return width_;
    }

    private void initFields() {
      piecePosition_ = java.util.Collections.emptyList();
      turn_ = Rpc.Player.HITHER;
      height_ = 0;
      width_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < piecePosition_.size(); i++) {
        output.writeMessage(1, piecePosition_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(2, turn_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, height_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, width_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < piecePosition_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, piecePosition_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, turn_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, height_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, width_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:State)
        Rpc.StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_State_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.State.class, Rpc.State.Builder.class);
      }

      // Construct using Rpc.State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPiecePositionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (piecePositionBuilder_ == null) {
          piecePosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          piecePositionBuilder_.clear();
        }
        turn_ = Rpc.Player.HITHER;
        bitField0_ = (bitField0_ & ~0x00000002);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_State_descriptor;
      }

      public Rpc.State getDefaultInstanceForType() {
        return Rpc.State.getDefaultInstance();
      }

      public Rpc.State build() {
        Rpc.State result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.State buildPartial() {
        Rpc.State result = new Rpc.State(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (piecePositionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            piecePosition_ = java.util.Collections.unmodifiableList(piecePosition_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.piecePosition_ = piecePosition_;
        } else {
          result.piecePosition_ = piecePositionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.turn_ = turn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.width_ = width_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.State) {
          return mergeFrom((Rpc.State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.State other) {
        if (other == Rpc.State.getDefaultInstance()) return this;
        if (piecePositionBuilder_ == null) {
          if (!other.piecePosition_.isEmpty()) {
            if (piecePosition_.isEmpty()) {
              piecePosition_ = other.piecePosition_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePiecePositionIsMutable();
              piecePosition_.addAll(other.piecePosition_);
            }
            onChanged();
          }
        } else {
          if (!other.piecePosition_.isEmpty()) {
            if (piecePositionBuilder_.isEmpty()) {
              piecePositionBuilder_.dispose();
              piecePositionBuilder_ = null;
              piecePosition_ = other.piecePosition_;
              bitField0_ = (bitField0_ & ~0x00000001);
              piecePositionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPiecePositionFieldBuilder() : null;
            } else {
              piecePositionBuilder_.addAllMessages(other.piecePosition_);
            }
          }
        }
        if (other.hasTurn()) {
          setTurn(other.getTurn());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.State) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Rpc.PiecePosition> piecePosition_ =
        java.util.Collections.emptyList();
      private void ensurePiecePositionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          piecePosition_ = new java.util.ArrayList<Rpc.PiecePosition>(piecePosition_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.PiecePosition, Rpc.PiecePosition.Builder, Rpc.PiecePositionOrBuilder> piecePositionBuilder_;

      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public java.util.List<Rpc.PiecePosition> getPiecePositionList() {
        if (piecePositionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(piecePosition_);
        } else {
          return piecePositionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public int getPiecePositionCount() {
        if (piecePositionBuilder_ == null) {
          return piecePosition_.size();
        } else {
          return piecePositionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Rpc.PiecePosition getPiecePosition(int index) {
        if (piecePositionBuilder_ == null) {
          return piecePosition_.get(index);
        } else {
          return piecePositionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder setPiecePosition(
          int index, Rpc.PiecePosition value) {
        if (piecePositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecePositionIsMutable();
          piecePosition_.set(index, value);
          onChanged();
        } else {
          piecePositionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder setPiecePosition(
          int index, Rpc.PiecePosition.Builder builderForValue) {
        if (piecePositionBuilder_ == null) {
          ensurePiecePositionIsMutable();
          piecePosition_.set(index, builderForValue.build());
          onChanged();
        } else {
          piecePositionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder addPiecePosition(Rpc.PiecePosition value) {
        if (piecePositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecePositionIsMutable();
          piecePosition_.add(value);
          onChanged();
        } else {
          piecePositionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder addPiecePosition(
          int index, Rpc.PiecePosition value) {
        if (piecePositionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiecePositionIsMutable();
          piecePosition_.add(index, value);
          onChanged();
        } else {
          piecePositionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder addPiecePosition(
          Rpc.PiecePosition.Builder builderForValue) {
        if (piecePositionBuilder_ == null) {
          ensurePiecePositionIsMutable();
          piecePosition_.add(builderForValue.build());
          onChanged();
        } else {
          piecePositionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder addPiecePosition(
          int index, Rpc.PiecePosition.Builder builderForValue) {
        if (piecePositionBuilder_ == null) {
          ensurePiecePositionIsMutable();
          piecePosition_.add(index, builderForValue.build());
          onChanged();
        } else {
          piecePositionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder addAllPiecePosition(
          java.lang.Iterable<? extends Rpc.PiecePosition> values) {
        if (piecePositionBuilder_ == null) {
          ensurePiecePositionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, piecePosition_);
          onChanged();
        } else {
          piecePositionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder clearPiecePosition() {
        if (piecePositionBuilder_ == null) {
          piecePosition_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          piecePositionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Builder removePiecePosition(int index) {
        if (piecePositionBuilder_ == null) {
          ensurePiecePositionIsMutable();
          piecePosition_.remove(index);
          onChanged();
        } else {
          piecePositionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Rpc.PiecePosition.Builder getPiecePositionBuilder(
          int index) {
        return getPiecePositionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Rpc.PiecePositionOrBuilder getPiecePositionOrBuilder(
          int index) {
        if (piecePositionBuilder_ == null) {
          return piecePosition_.get(index);  } else {
          return piecePositionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public java.util.List<? extends Rpc.PiecePositionOrBuilder>
           getPiecePositionOrBuilderList() {
        if (piecePositionBuilder_ != null) {
          return piecePositionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(piecePosition_);
        }
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Rpc.PiecePosition.Builder addPiecePositionBuilder() {
        return getPiecePositionFieldBuilder().addBuilder(
            Rpc.PiecePosition.getDefaultInstance());
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public Rpc.PiecePosition.Builder addPiecePositionBuilder(
          int index) {
        return getPiecePositionFieldBuilder().addBuilder(
            index, Rpc.PiecePosition.getDefaultInstance());
      }
      /**
       * <code>repeated .PiecePosition piece_position = 1;</code>
       */
      public java.util.List<Rpc.PiecePosition.Builder>
           getPiecePositionBuilderList() {
        return getPiecePositionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.PiecePosition, Rpc.PiecePosition.Builder, Rpc.PiecePositionOrBuilder>
          getPiecePositionFieldBuilder() {
        if (piecePositionBuilder_ == null) {
          piecePositionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Rpc.PiecePosition, Rpc.PiecePosition.Builder, Rpc.PiecePositionOrBuilder>(
                  piecePosition_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          piecePosition_ = null;
        }
        return piecePositionBuilder_;
      }

      private Rpc.Player turn_ = Rpc.Player.HITHER;
      /**
       * <code>optional .Player turn = 2;</code>
       */
      public boolean hasTurn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Player turn = 2;</code>
       */
      public Rpc.Player getTurn() {
        return turn_;
      }
      /**
       * <code>optional .Player turn = 2;</code>
       */
      public Builder setTurn(Rpc.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        turn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Player turn = 2;</code>
       */
      public Builder clearTurn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        turn_ = Rpc.Player.HITHER;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 height = 3;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 height = 3;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 3;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00000004;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 3;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000004);
        height_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 width = 4;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 width = 4;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 4;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00000008;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 4;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        width_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:State)
    }

    static {
      defaultInstance = new State(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:State)
  }

  public interface ProblemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Problem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .State state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>optional .State state = 1;</code>
     */
    Rpc.State getState();
    /**
     * <code>optional .State state = 1;</code>
     */
    Rpc.StateOrBuilder getStateOrBuilder();

    /**
     * <code>optional .Problem.Rule rule = 2;</code>
     */
    boolean hasRule();
    /**
     * <code>optional .Problem.Rule rule = 2;</code>
     */
    Rpc.Problem.Rule getRule();

    /**
     * <code>optional int64 limit = 3;</code>
     */
    boolean hasLimit();
    /**
     * <code>optional int64 limit = 3;</code>
     */
    long getLimit();
  }
  /**
   * Protobuf type {@code Problem}
   */
  public static final class Problem extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Problem)
      ProblemOrBuilder {
    // Use Problem.newBuilder() to construct.
    private Problem(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Problem(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Problem defaultInstance;
    public static Problem getDefaultInstance() {
      return defaultInstance;
    }

    public Problem getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Problem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              Rpc.State.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(Rpc.State.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              Rpc.Problem.Rule value = Rpc.Problem.Rule.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                rule_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              limit_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Problem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Problem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Problem.class, Rpc.Problem.Builder.class);
    }

    public static com.google.protobuf.Parser<Problem> PARSER =
        new com.google.protobuf.AbstractParser<Problem>() {
      public Problem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Problem(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Problem> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Problem.Rule}
     */
    public enum Rule
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HELP = 1;</code>
       */
      HELP(0, 1),
      ;

      /**
       * <code>HELP = 1;</code>
       */
      public static final int HELP_VALUE = 1;


      public final int getNumber() { return value; }

      public static Rule valueOf(int value) {
        switch (value) {
          case 1: return HELP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Rule>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Rule>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Rule>() {
              public Rule findValueByNumber(int number) {
                return Rule.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Rpc.Problem.getDescriptor().getEnumTypes().get(0);
      }

      private static final Rule[] VALUES = values();

      public static Rule valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Rule(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Problem.Rule)
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private Rpc.State state_;
    /**
     * <code>optional .State state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .State state = 1;</code>
     */
    public Rpc.State getState() {
      return state_;
    }
    /**
     * <code>optional .State state = 1;</code>
     */
    public Rpc.StateOrBuilder getStateOrBuilder() {
      return state_;
    }

    public static final int RULE_FIELD_NUMBER = 2;
    private Rpc.Problem.Rule rule_;
    /**
     * <code>optional .Problem.Rule rule = 2;</code>
     */
    public boolean hasRule() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Problem.Rule rule = 2;</code>
     */
    public Rpc.Problem.Rule getRule() {
      return rule_;
    }

    public static final int LIMIT_FIELD_NUMBER = 3;
    private long limit_;
    /**
     * <code>optional int64 limit = 3;</code>
     */
    public boolean hasLimit() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 limit = 3;</code>
     */
    public long getLimit() {
      return limit_;
    }

    private void initFields() {
      state_ = Rpc.State.getDefaultInstance();
      rule_ = Rpc.Problem.Rule.HELP;
      limit_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, rule_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, limit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, rule_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, limit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Problem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Problem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Problem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Problem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Problem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Problem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Problem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Problem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Problem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Problem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Problem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Problem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Problem)
        Rpc.ProblemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Problem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Problem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Problem.class, Rpc.Problem.Builder.class);
      }

      // Construct using Rpc.Problem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStateFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (stateBuilder_ == null) {
          state_ = Rpc.State.getDefaultInstance();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        rule_ = Rpc.Problem.Rule.HELP;
        bitField0_ = (bitField0_ & ~0x00000002);
        limit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Problem_descriptor;
      }

      public Rpc.Problem getDefaultInstanceForType() {
        return Rpc.Problem.getDefaultInstance();
      }

      public Rpc.Problem build() {
        Rpc.Problem result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Problem buildPartial() {
        Rpc.Problem result = new Rpc.Problem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rule_ = rule_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.limit_ = limit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Problem) {
          return mergeFrom((Rpc.Problem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Problem other) {
        if (other == Rpc.Problem.getDefaultInstance()) return this;
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (other.hasRule()) {
          setRule(other.getRule());
        }
        if (other.hasLimit()) {
          setLimit(other.getLimit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Problem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Problem) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Rpc.State state_ = Rpc.State.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.State, Rpc.State.Builder, Rpc.StateOrBuilder> stateBuilder_;
      /**
       * <code>optional .State state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Rpc.State getState() {
        if (stateBuilder_ == null) {
          return state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Builder setState(Rpc.State value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Builder setState(
          Rpc.State.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Builder mergeState(Rpc.State value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              state_ != Rpc.State.getDefaultInstance()) {
            state_ =
              Rpc.State.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = Rpc.State.getDefaultInstance();
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Rpc.State.Builder getStateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      public Rpc.StateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_;
        }
      }
      /**
       * <code>optional .State state = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.State, Rpc.State.Builder, Rpc.StateOrBuilder>
          getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.State, Rpc.State.Builder, Rpc.StateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      private Rpc.Problem.Rule rule_ = Rpc.Problem.Rule.HELP;
      /**
       * <code>optional .Problem.Rule rule = 2;</code>
       */
      public boolean hasRule() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Problem.Rule rule = 2;</code>
       */
      public Rpc.Problem.Rule getRule() {
        return rule_;
      }
      /**
       * <code>optional .Problem.Rule rule = 2;</code>
       */
      public Builder setRule(Rpc.Problem.Rule value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        rule_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Problem.Rule rule = 2;</code>
       */
      public Builder clearRule() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rule_ = Rpc.Problem.Rule.HELP;
        onChanged();
        return this;
      }

      private long limit_ ;
      /**
       * <code>optional int64 limit = 3;</code>
       */
      public boolean hasLimit() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 limit = 3;</code>
       */
      public long getLimit() {
        return limit_;
      }
      /**
       * <code>optional int64 limit = 3;</code>
       */
      public Builder setLimit(long value) {
        bitField0_ |= 0x00000004;
        limit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 limit = 3;</code>
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        limit_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Problem)
    }

    static {
      defaultInstance = new Problem(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Problem)
  }

  public interface MoveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Move)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .Player mover = 1;</code>
     */
    boolean hasMover();
    /**
     * <code>optional .Player mover = 1;</code>
     */
    Rpc.Player getMover();

    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    boolean hasSource();
    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    Rpc.Move.Source getSource();
    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    Rpc.Move.SourceOrBuilder getSourceOrBuilder();

    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    boolean hasDestination();
    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    Rpc.Move.Destination getDestination();
    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    Rpc.Move.DestinationOrBuilder getDestinationOrBuilder();
  }
  /**
   * Protobuf type {@code Move}
   */
  public static final class Move extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Move)
      MoveOrBuilder {
    // Use Move.newBuilder() to construct.
    private Move(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Move(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Move defaultInstance;
    public static Move getDefaultInstance() {
      return defaultInstance;
    }

    public Move getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Move(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              Rpc.Player value = Rpc.Player.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mover_ = value;
              }
              break;
            }
            case 18: {
              Rpc.Move.Source.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(Rpc.Move.Source.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              Rpc.Move.Destination.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = destination_.toBuilder();
              }
              destination_ = input.readMessage(Rpc.Move.Destination.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(destination_);
                destination_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Move_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Move_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Move.class, Rpc.Move.Builder.class);
    }

    public static com.google.protobuf.Parser<Move> PARSER =
        new com.google.protobuf.AbstractParser<Move>() {
      public Move parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Move(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Move> getParserForType() {
      return PARSER;
    }

    public interface SourceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Move.Source)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      boolean hasCell();
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      Rpc.Cell getCell();
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      Rpc.CellOrBuilder getCellOrBuilder();
    }
    /**
     * Protobuf type {@code Move.Source}
     */
    public static final class Source extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:Move.Source)
        SourceOrBuilder {
      // Use Source.newBuilder() to construct.
      private Source(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Source(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Source defaultInstance;
      public static Source getDefaultInstance() {
        return defaultInstance;
      }

      public Source getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Source(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                Rpc.Cell.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = cell_.toBuilder();
                }
                cell_ = input.readMessage(Rpc.Cell.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cell_);
                  cell_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Move_Source_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Move_Source_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Move.Source.class, Rpc.Move.Source.Builder.class);
      }

      public static com.google.protobuf.Parser<Source> PARSER =
          new com.google.protobuf.AbstractParser<Source>() {
        public Source parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Source(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Source> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CELL_FIELD_NUMBER = 1;
      private Rpc.Cell cell_;
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      public boolean hasCell() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      public Rpc.Cell getCell() {
        return cell_;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       *
       * <pre>
       * If not set, the source is from hand.
       * </pre>
       */
      public Rpc.CellOrBuilder getCellOrBuilder() {
        return cell_;
      }

      private void initFields() {
        cell_ = Rpc.Cell.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, cell_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, cell_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Rpc.Move.Source parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Rpc.Move.Source parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Rpc.Move.Source parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Rpc.Move.Source parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Rpc.Move.Source parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Rpc.Move.Source parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Rpc.Move.Source parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Rpc.Move.Source parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Rpc.Move.Source parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Rpc.Move.Source parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Rpc.Move.Source prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Move.Source}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Move.Source)
          Rpc.Move.SourceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Rpc.internal_static_Move_Source_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Rpc.internal_static_Move_Source_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Rpc.Move.Source.class, Rpc.Move.Source.Builder.class);
        }

        // Construct using Rpc.Move.Source.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCellFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (cellBuilder_ == null) {
            cell_ = Rpc.Cell.getDefaultInstance();
          } else {
            cellBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Rpc.internal_static_Move_Source_descriptor;
        }

        public Rpc.Move.Source getDefaultInstanceForType() {
          return Rpc.Move.Source.getDefaultInstance();
        }

        public Rpc.Move.Source build() {
          Rpc.Move.Source result = buildPartial();
          if (!result.isInitialized()) {
            throw AbstractMessage.Builder.newUninitializedMessageException(result);
          }
          return result;
        }

        public Rpc.Move.Source buildPartial() {
          Rpc.Move.Source result = new Rpc.Move.Source(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (cellBuilder_ == null) {
            result.cell_ = cell_;
          } else {
            result.cell_ = cellBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Rpc.Move.Source) {
            return mergeFrom((Rpc.Move.Source)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Rpc.Move.Source other) {
          if (other == Rpc.Move.Source.getDefaultInstance()) return this;
          if (other.hasCell()) {
            mergeCell(other.getCell());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Rpc.Move.Source parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Rpc.Move.Source) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private Rpc.Cell cell_ = Rpc.Cell.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder> cellBuilder_;
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public boolean hasCell() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Rpc.Cell getCell() {
          if (cellBuilder_ == null) {
            return cell_;
          } else {
            return cellBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Builder setCell(Rpc.Cell value) {
          if (cellBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cell_ = value;
            onChanged();
          } else {
            cellBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Builder setCell(
            Rpc.Cell.Builder builderForValue) {
          if (cellBuilder_ == null) {
            cell_ = builderForValue.build();
            onChanged();
          } else {
            cellBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Builder mergeCell(Rpc.Cell value) {
          if (cellBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                cell_ != Rpc.Cell.getDefaultInstance()) {
              cell_ =
                Rpc.Cell.newBuilder(cell_).mergeFrom(value).buildPartial();
            } else {
              cell_ = value;
            }
            onChanged();
          } else {
            cellBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Builder clearCell() {
          if (cellBuilder_ == null) {
            cell_ = Rpc.Cell.getDefaultInstance();
            onChanged();
          } else {
            cellBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Rpc.Cell.Builder getCellBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getCellFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        public Rpc.CellOrBuilder getCellOrBuilder() {
          if (cellBuilder_ != null) {
            return cellBuilder_.getMessageOrBuilder();
          } else {
            return cell_;
          }
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         *
         * <pre>
         * If not set, the source is from hand.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>
            getCellFieldBuilder() {
          if (cellBuilder_ == null) {
            cellBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>(
                    getCell(),
                    getParentForChildren(),
                    isClean());
            cell_ = null;
          }
          return cellBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:Move.Source)
      }

      static {
        defaultInstance = new Source(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Move.Source)
    }

    public interface DestinationOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Move.Destination)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .Cell cell = 1;</code>
       */
      boolean hasCell();
      /**
       * <code>optional .Cell cell = 1;</code>
       */
      Rpc.Cell getCell();
      /**
       * <code>optional .Cell cell = 1;</code>
       */
      Rpc.CellOrBuilder getCellOrBuilder();

      /**
       * <code>optional .Piece piece = 2;</code>
       */
      boolean hasPiece();
      /**
       * <code>optional .Piece piece = 2;</code>
       */
      Rpc.Piece getPiece();
      /**
       * <code>optional .Piece piece = 2;</code>
       */
      Rpc.PieceOrBuilder getPieceOrBuilder();
    }
    /**
     * Protobuf type {@code Move.Destination}
     */
    public static final class Destination extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:Move.Destination)
        DestinationOrBuilder {
      // Use Destination.newBuilder() to construct.
      private Destination(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Destination(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Destination defaultInstance;
      public static Destination getDefaultInstance() {
        return defaultInstance;
      }

      public Destination getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Destination(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                Rpc.Cell.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = cell_.toBuilder();
                }
                cell_ = input.readMessage(Rpc.Cell.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(cell_);
                  cell_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                Rpc.Piece.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = piece_.toBuilder();
                }
                piece_ = input.readMessage(Rpc.Piece.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(piece_);
                  piece_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Move_Destination_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Move_Destination_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Move.Destination.class, Rpc.Move.Destination.Builder.class);
      }

      public static com.google.protobuf.Parser<Destination> PARSER =
          new com.google.protobuf.AbstractParser<Destination>() {
        public Destination parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Destination(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Destination> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CELL_FIELD_NUMBER = 1;
      private Rpc.Cell cell_;
      /**
       * <code>optional .Cell cell = 1;</code>
       */
      public boolean hasCell() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       */
      public Rpc.Cell getCell() {
        return cell_;
      }
      /**
       * <code>optional .Cell cell = 1;</code>
       */
      public Rpc.CellOrBuilder getCellOrBuilder() {
        return cell_;
      }

      public static final int PIECE_FIELD_NUMBER = 2;
      private Rpc.Piece piece_;
      /**
       * <code>optional .Piece piece = 2;</code>
       */
      public boolean hasPiece() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Piece piece = 2;</code>
       */
      public Rpc.Piece getPiece() {
        return piece_;
      }
      /**
       * <code>optional .Piece piece = 2;</code>
       */
      public Rpc.PieceOrBuilder getPieceOrBuilder() {
        return piece_;
      }

      private void initFields() {
        cell_ = Rpc.Cell.getDefaultInstance();
        piece_ = Rpc.Piece.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, cell_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, piece_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, cell_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, piece_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static Rpc.Move.Destination parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Rpc.Move.Destination parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Rpc.Move.Destination parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Rpc.Move.Destination parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Rpc.Move.Destination parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Rpc.Move.Destination parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static Rpc.Move.Destination parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static Rpc.Move.Destination parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static Rpc.Move.Destination parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static Rpc.Move.Destination parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(Rpc.Move.Destination prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Move.Destination}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Move.Destination)
          Rpc.Move.DestinationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Rpc.internal_static_Move_Destination_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Rpc.internal_static_Move_Destination_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Rpc.Move.Destination.class, Rpc.Move.Destination.Builder.class);
        }

        // Construct using Rpc.Move.Destination.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCellFieldBuilder();
            getPieceFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (cellBuilder_ == null) {
            cell_ = Rpc.Cell.getDefaultInstance();
          } else {
            cellBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (pieceBuilder_ == null) {
            piece_ = Rpc.Piece.getDefaultInstance();
          } else {
            pieceBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Rpc.internal_static_Move_Destination_descriptor;
        }

        public Rpc.Move.Destination getDefaultInstanceForType() {
          return Rpc.Move.Destination.getDefaultInstance();
        }

        public Rpc.Move.Destination build() {
          Rpc.Move.Destination result = buildPartial();
          if (!result.isInitialized()) {
            throw AbstractMessage.Builder.newUninitializedMessageException(result);
          }
          return result;
        }

        public Rpc.Move.Destination buildPartial() {
          Rpc.Move.Destination result = new Rpc.Move.Destination(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (cellBuilder_ == null) {
            result.cell_ = cell_;
          } else {
            result.cell_ = cellBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (pieceBuilder_ == null) {
            result.piece_ = piece_;
          } else {
            result.piece_ = pieceBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Rpc.Move.Destination) {
            return mergeFrom((Rpc.Move.Destination)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Rpc.Move.Destination other) {
          if (other == Rpc.Move.Destination.getDefaultInstance()) return this;
          if (other.hasCell()) {
            mergeCell(other.getCell());
          }
          if (other.hasPiece()) {
            mergePiece(other.getPiece());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Rpc.Move.Destination parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Rpc.Move.Destination) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private Rpc.Cell cell_ = Rpc.Cell.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder> cellBuilder_;
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public boolean hasCell() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Rpc.Cell getCell() {
          if (cellBuilder_ == null) {
            return cell_;
          } else {
            return cellBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Builder setCell(Rpc.Cell value) {
          if (cellBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            cell_ = value;
            onChanged();
          } else {
            cellBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Builder setCell(
            Rpc.Cell.Builder builderForValue) {
          if (cellBuilder_ == null) {
            cell_ = builderForValue.build();
            onChanged();
          } else {
            cellBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Builder mergeCell(Rpc.Cell value) {
          if (cellBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                cell_ != Rpc.Cell.getDefaultInstance()) {
              cell_ =
                Rpc.Cell.newBuilder(cell_).mergeFrom(value).buildPartial();
            } else {
              cell_ = value;
            }
            onChanged();
          } else {
            cellBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Builder clearCell() {
          if (cellBuilder_ == null) {
            cell_ = Rpc.Cell.getDefaultInstance();
            onChanged();
          } else {
            cellBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Rpc.Cell.Builder getCellBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getCellFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        public Rpc.CellOrBuilder getCellOrBuilder() {
          if (cellBuilder_ != null) {
            return cellBuilder_.getMessageOrBuilder();
          } else {
            return cell_;
          }
        }
        /**
         * <code>optional .Cell cell = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>
            getCellFieldBuilder() {
          if (cellBuilder_ == null) {
            cellBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Rpc.Cell, Rpc.Cell.Builder, Rpc.CellOrBuilder>(
                    getCell(),
                    getParentForChildren(),
                    isClean());
            cell_ = null;
          }
          return cellBuilder_;
        }

        private Rpc.Piece piece_ = Rpc.Piece.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder> pieceBuilder_;
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public boolean hasPiece() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Rpc.Piece getPiece() {
          if (pieceBuilder_ == null) {
            return piece_;
          } else {
            return pieceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Builder setPiece(Rpc.Piece value) {
          if (pieceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            piece_ = value;
            onChanged();
          } else {
            pieceBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Builder setPiece(
            Rpc.Piece.Builder builderForValue) {
          if (pieceBuilder_ == null) {
            piece_ = builderForValue.build();
            onChanged();
          } else {
            pieceBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Builder mergePiece(Rpc.Piece value) {
          if (pieceBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                piece_ != Rpc.Piece.getDefaultInstance()) {
              piece_ =
                Rpc.Piece.newBuilder(piece_).mergeFrom(value).buildPartial();
            } else {
              piece_ = value;
            }
            onChanged();
          } else {
            pieceBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Builder clearPiece() {
          if (pieceBuilder_ == null) {
            piece_ = Rpc.Piece.getDefaultInstance();
            onChanged();
          } else {
            pieceBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Rpc.Piece.Builder getPieceBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getPieceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        public Rpc.PieceOrBuilder getPieceOrBuilder() {
          if (pieceBuilder_ != null) {
            return pieceBuilder_.getMessageOrBuilder();
          } else {
            return piece_;
          }
        }
        /**
         * <code>optional .Piece piece = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder>
            getPieceFieldBuilder() {
          if (pieceBuilder_ == null) {
            pieceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                Rpc.Piece, Rpc.Piece.Builder, Rpc.PieceOrBuilder>(
                    getPiece(),
                    getParentForChildren(),
                    isClean());
            piece_ = null;
          }
          return pieceBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:Move.Destination)
      }

      static {
        defaultInstance = new Destination(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Move.Destination)
    }

    private int bitField0_;
    public static final int MOVER_FIELD_NUMBER = 1;
    private Rpc.Player mover_;
    /**
     * <code>optional .Player mover = 1;</code>
     */
    public boolean hasMover() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Player mover = 1;</code>
     */
    public Rpc.Player getMover() {
      return mover_;
    }

    public static final int SOURCE_FIELD_NUMBER = 2;
    private Rpc.Move.Source source_;
    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    public boolean hasSource() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    public Rpc.Move.Source getSource() {
      return source_;
    }
    /**
     * <code>optional .Move.Source source = 2;</code>
     */
    public Rpc.Move.SourceOrBuilder getSourceOrBuilder() {
      return source_;
    }

    public static final int DESTINATION_FIELD_NUMBER = 3;
    private Rpc.Move.Destination destination_;
    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    public boolean hasDestination() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    public Rpc.Move.Destination getDestination() {
      return destination_;
    }
    /**
     * <code>optional .Move.Destination destination = 3;</code>
     */
    public Rpc.Move.DestinationOrBuilder getDestinationOrBuilder() {
      return destination_;
    }

    private void initFields() {
      mover_ = Rpc.Player.HITHER;
      source_ = Rpc.Move.Source.getDefaultInstance();
      destination_ = Rpc.Move.Destination.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mover_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, source_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, destination_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mover_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, source_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, destination_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Move parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Move parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Move parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Move parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Move parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Move parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Move parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Move parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Move parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Move parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Move prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Move}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Move)
        Rpc.MoveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Move_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Move_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Move.class, Rpc.Move.Builder.class);
      }

      // Construct using Rpc.Move.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSourceFieldBuilder();
          getDestinationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mover_ = Rpc.Player.HITHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sourceBuilder_ == null) {
          source_ = Rpc.Move.Source.getDefaultInstance();
        } else {
          sourceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (destinationBuilder_ == null) {
          destination_ = Rpc.Move.Destination.getDefaultInstance();
        } else {
          destinationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Move_descriptor;
      }

      public Rpc.Move getDefaultInstanceForType() {
        return Rpc.Move.getDefaultInstance();
      }

      public Rpc.Move build() {
        Rpc.Move result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Move buildPartial() {
        Rpc.Move result = new Rpc.Move(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mover_ = mover_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (destinationBuilder_ == null) {
          result.destination_ = destination_;
        } else {
          result.destination_ = destinationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Move) {
          return mergeFrom((Rpc.Move)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Move other) {
        if (other == Rpc.Move.getDefaultInstance()) return this;
        if (other.hasMover()) {
          setMover(other.getMover());
        }
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.hasDestination()) {
          mergeDestination(other.getDestination());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Move parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Move) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Rpc.Player mover_ = Rpc.Player.HITHER;
      /**
       * <code>optional .Player mover = 1;</code>
       */
      public boolean hasMover() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Player mover = 1;</code>
       */
      public Rpc.Player getMover() {
        return mover_;
      }
      /**
       * <code>optional .Player mover = 1;</code>
       */
      public Builder setMover(Rpc.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mover_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Player mover = 1;</code>
       */
      public Builder clearMover() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mover_ = Rpc.Player.HITHER;
        onChanged();
        return this;
      }

      private Rpc.Move.Source source_ = Rpc.Move.Source.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Move.Source, Rpc.Move.Source.Builder, Rpc.Move.SourceOrBuilder> sourceBuilder_;
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Rpc.Move.Source getSource() {
        if (sourceBuilder_ == null) {
          return source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Builder setSource(Rpc.Move.Source value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Builder setSource(
          Rpc.Move.Source.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Builder mergeSource(Rpc.Move.Source value) {
        if (sourceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              source_ != Rpc.Move.Source.getDefaultInstance()) {
            source_ =
              Rpc.Move.Source.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = Rpc.Move.Source.getDefaultInstance();
          onChanged();
        } else {
          sourceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Rpc.Move.Source.Builder getSourceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      public Rpc.Move.SourceOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_;
        }
      }
      /**
       * <code>optional .Move.Source source = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Move.Source, Rpc.Move.Source.Builder, Rpc.Move.SourceOrBuilder>
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.Move.Source, Rpc.Move.Source.Builder, Rpc.Move.SourceOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private Rpc.Move.Destination destination_ = Rpc.Move.Destination.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Move.Destination, Rpc.Move.Destination.Builder, Rpc.Move.DestinationOrBuilder> destinationBuilder_;
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public boolean hasDestination() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Rpc.Move.Destination getDestination() {
        if (destinationBuilder_ == null) {
          return destination_;
        } else {
          return destinationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Builder setDestination(Rpc.Move.Destination value) {
        if (destinationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          destination_ = value;
          onChanged();
        } else {
          destinationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Builder setDestination(
          Rpc.Move.Destination.Builder builderForValue) {
        if (destinationBuilder_ == null) {
          destination_ = builderForValue.build();
          onChanged();
        } else {
          destinationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Builder mergeDestination(Rpc.Move.Destination value) {
        if (destinationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              destination_ != Rpc.Move.Destination.getDefaultInstance()) {
            destination_ =
              Rpc.Move.Destination.newBuilder(destination_).mergeFrom(value).buildPartial();
          } else {
            destination_ = value;
          }
          onChanged();
        } else {
          destinationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Builder clearDestination() {
        if (destinationBuilder_ == null) {
          destination_ = Rpc.Move.Destination.getDefaultInstance();
          onChanged();
        } else {
          destinationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Rpc.Move.Destination.Builder getDestinationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDestinationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      public Rpc.Move.DestinationOrBuilder getDestinationOrBuilder() {
        if (destinationBuilder_ != null) {
          return destinationBuilder_.getMessageOrBuilder();
        } else {
          return destination_;
        }
      }
      /**
       * <code>optional .Move.Destination destination = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          Rpc.Move.Destination, Rpc.Move.Destination.Builder, Rpc.Move.DestinationOrBuilder>
          getDestinationFieldBuilder() {
        if (destinationBuilder_ == null) {
          destinationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Rpc.Move.Destination, Rpc.Move.Destination.Builder, Rpc.Move.DestinationOrBuilder>(
                  getDestination(),
                  getParentForChildren(),
                  isClean());
          destination_ = null;
        }
        return destinationBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Move)
    }

    static {
      defaultInstance = new Move(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Move)
  }

  public interface SolutionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Solution)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Move move = 1;</code>
     */
    java.util.List<Rpc.Move>
        getMoveList();
    /**
     * <code>repeated .Move move = 1;</code>
     */
    Rpc.Move getMove(int index);
    /**
     * <code>repeated .Move move = 1;</code>
     */
    int getMoveCount();
    /**
     * <code>repeated .Move move = 1;</code>
     */
    java.util.List<? extends Rpc.MoveOrBuilder>
        getMoveOrBuilderList();
    /**
     * <code>repeated .Move move = 1;</code>
     */
    Rpc.MoveOrBuilder getMoveOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Solution}
   */
  public static final class Solution extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Solution)
      SolutionOrBuilder {
    // Use Solution.newBuilder() to construct.
    private Solution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Solution(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Solution defaultInstance;
    public static Solution getDefaultInstance() {
      return defaultInstance;
    }

    public Solution getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Solution(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                move_ = new java.util.ArrayList<Rpc.Move>();
                mutable_bitField0_ |= 0x00000001;
              }
              move_.add(input.readMessage(Rpc.Move.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          move_ = java.util.Collections.unmodifiableList(move_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_Solution_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_Solution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.Solution.class, Rpc.Solution.Builder.class);
    }

    public static com.google.protobuf.Parser<Solution> PARSER =
        new com.google.protobuf.AbstractParser<Solution>() {
      public Solution parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Solution(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Solution> getParserForType() {
      return PARSER;
    }

    public static final int MOVE_FIELD_NUMBER = 1;
    private java.util.List<Rpc.Move> move_;
    /**
     * <code>repeated .Move move = 1;</code>
     */
    public java.util.List<Rpc.Move> getMoveList() {
      return move_;
    }
    /**
     * <code>repeated .Move move = 1;</code>
     */
    public java.util.List<? extends Rpc.MoveOrBuilder>
        getMoveOrBuilderList() {
      return move_;
    }
    /**
     * <code>repeated .Move move = 1;</code>
     */
    public int getMoveCount() {
      return move_.size();
    }
    /**
     * <code>repeated .Move move = 1;</code>
     */
    public Rpc.Move getMove(int index) {
      return move_.get(index);
    }
    /**
     * <code>repeated .Move move = 1;</code>
     */
    public Rpc.MoveOrBuilder getMoveOrBuilder(
        int index) {
      return move_.get(index);
    }

    private void initFields() {
      move_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < move_.size(); i++) {
        output.writeMessage(1, move_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < move_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, move_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.Solution parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Solution parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Solution parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.Solution parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.Solution parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Solution parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.Solution parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.Solution parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.Solution parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.Solution parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.Solution prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Solution}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Solution)
        Rpc.SolutionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_Solution_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_Solution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.Solution.class, Rpc.Solution.Builder.class);
      }

      // Construct using Rpc.Solution.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoveFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (moveBuilder_ == null) {
          move_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          moveBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_Solution_descriptor;
      }

      public Rpc.Solution getDefaultInstanceForType() {
        return Rpc.Solution.getDefaultInstance();
      }

      public Rpc.Solution build() {
        Rpc.Solution result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.Solution buildPartial() {
        Rpc.Solution result = new Rpc.Solution(this);
        int from_bitField0_ = bitField0_;
        if (moveBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            move_ = java.util.Collections.unmodifiableList(move_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.move_ = move_;
        } else {
          result.move_ = moveBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.Solution) {
          return mergeFrom((Rpc.Solution)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.Solution other) {
        if (other == Rpc.Solution.getDefaultInstance()) return this;
        if (moveBuilder_ == null) {
          if (!other.move_.isEmpty()) {
            if (move_.isEmpty()) {
              move_ = other.move_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMoveIsMutable();
              move_.addAll(other.move_);
            }
            onChanged();
          }
        } else {
          if (!other.move_.isEmpty()) {
            if (moveBuilder_.isEmpty()) {
              moveBuilder_.dispose();
              moveBuilder_ = null;
              move_ = other.move_;
              bitField0_ = (bitField0_ & ~0x00000001);
              moveBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoveFieldBuilder() : null;
            } else {
              moveBuilder_.addAllMessages(other.move_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.Solution parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.Solution) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Rpc.Move> move_ =
        java.util.Collections.emptyList();
      private void ensureMoveIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          move_ = new java.util.ArrayList<Rpc.Move>(move_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.Move, Rpc.Move.Builder, Rpc.MoveOrBuilder> moveBuilder_;

      /**
       * <code>repeated .Move move = 1;</code>
       */
      public java.util.List<Rpc.Move> getMoveList() {
        if (moveBuilder_ == null) {
          return java.util.Collections.unmodifiableList(move_);
        } else {
          return moveBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public int getMoveCount() {
        if (moveBuilder_ == null) {
          return move_.size();
        } else {
          return moveBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Rpc.Move getMove(int index) {
        if (moveBuilder_ == null) {
          return move_.get(index);
        } else {
          return moveBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder setMove(
          int index, Rpc.Move value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveIsMutable();
          move_.set(index, value);
          onChanged();
        } else {
          moveBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder setMove(
          int index, Rpc.Move.Builder builderForValue) {
        if (moveBuilder_ == null) {
          ensureMoveIsMutable();
          move_.set(index, builderForValue.build());
          onChanged();
        } else {
          moveBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder addMove(Rpc.Move value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveIsMutable();
          move_.add(value);
          onChanged();
        } else {
          moveBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder addMove(
          int index, Rpc.Move value) {
        if (moveBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoveIsMutable();
          move_.add(index, value);
          onChanged();
        } else {
          moveBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder addMove(
          Rpc.Move.Builder builderForValue) {
        if (moveBuilder_ == null) {
          ensureMoveIsMutable();
          move_.add(builderForValue.build());
          onChanged();
        } else {
          moveBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder addMove(
          int index, Rpc.Move.Builder builderForValue) {
        if (moveBuilder_ == null) {
          ensureMoveIsMutable();
          move_.add(index, builderForValue.build());
          onChanged();
        } else {
          moveBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder addAllMove(
          java.lang.Iterable<? extends Rpc.Move> values) {
        if (moveBuilder_ == null) {
          ensureMoveIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, move_);
          onChanged();
        } else {
          moveBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder clearMove() {
        if (moveBuilder_ == null) {
          move_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          moveBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Builder removeMove(int index) {
        if (moveBuilder_ == null) {
          ensureMoveIsMutable();
          move_.remove(index);
          onChanged();
        } else {
          moveBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Rpc.Move.Builder getMoveBuilder(
          int index) {
        return getMoveFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Rpc.MoveOrBuilder getMoveOrBuilder(
          int index) {
        if (moveBuilder_ == null) {
          return move_.get(index);  } else {
          return moveBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public java.util.List<? extends Rpc.MoveOrBuilder>
           getMoveOrBuilderList() {
        if (moveBuilder_ != null) {
          return moveBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(move_);
        }
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Rpc.Move.Builder addMoveBuilder() {
        return getMoveFieldBuilder().addBuilder(
            Rpc.Move.getDefaultInstance());
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public Rpc.Move.Builder addMoveBuilder(
          int index) {
        return getMoveFieldBuilder().addBuilder(
            index, Rpc.Move.getDefaultInstance());
      }
      /**
       * <code>repeated .Move move = 1;</code>
       */
      public java.util.List<Rpc.Move.Builder>
           getMoveBuilderList() {
        return getMoveFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.Move, Rpc.Move.Builder, Rpc.MoveOrBuilder>
          getMoveFieldBuilder() {
        if (moveBuilder_ == null) {
          moveBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Rpc.Move, Rpc.Move.Builder, Rpc.MoveOrBuilder>(
                  move_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          move_ = null;
        }
        return moveBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Solution)
    }

    static {
      defaultInstance = new Solution(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Solution)
  }

  public interface SolutionSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SolutionSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    java.util.List<Rpc.Solution>
        getSolutionList();
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    Rpc.Solution getSolution(int index);
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    int getSolutionCount();
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    java.util.List<? extends Rpc.SolutionOrBuilder>
        getSolutionOrBuilderList();
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    Rpc.SolutionOrBuilder getSolutionOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SolutionSet}
   */
  public static final class SolutionSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SolutionSet)
      SolutionSetOrBuilder {
    // Use SolutionSet.newBuilder() to construct.
    private SolutionSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SolutionSet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SolutionSet defaultInstance;
    public static SolutionSet getDefaultInstance() {
      return defaultInstance;
    }

    public SolutionSet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SolutionSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                solution_ = new java.util.ArrayList<Rpc.Solution>();
                mutable_bitField0_ |= 0x00000001;
              }
              solution_.add(input.readMessage(Rpc.Solution.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          solution_ = java.util.Collections.unmodifiableList(solution_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Rpc.internal_static_SolutionSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Rpc.internal_static_SolutionSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Rpc.SolutionSet.class, Rpc.SolutionSet.Builder.class);
    }

    public static com.google.protobuf.Parser<SolutionSet> PARSER =
        new com.google.protobuf.AbstractParser<SolutionSet>() {
      public SolutionSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SolutionSet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SolutionSet> getParserForType() {
      return PARSER;
    }

    public static final int SOLUTION_FIELD_NUMBER = 1;
    private java.util.List<Rpc.Solution> solution_;
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    public java.util.List<Rpc.Solution> getSolutionList() {
      return solution_;
    }
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    public java.util.List<? extends Rpc.SolutionOrBuilder>
        getSolutionOrBuilderList() {
      return solution_;
    }
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    public int getSolutionCount() {
      return solution_.size();
    }
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    public Rpc.Solution getSolution(int index) {
      return solution_.get(index);
    }
    /**
     * <code>repeated .Solution solution = 1;</code>
     */
    public Rpc.SolutionOrBuilder getSolutionOrBuilder(
        int index) {
      return solution_.get(index);
    }

    private void initFields() {
      solution_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < solution_.size(); i++) {
        output.writeMessage(1, solution_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < solution_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, solution_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Rpc.SolutionSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.SolutionSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.SolutionSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Rpc.SolutionSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Rpc.SolutionSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.SolutionSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Rpc.SolutionSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Rpc.SolutionSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Rpc.SolutionSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Rpc.SolutionSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Rpc.SolutionSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SolutionSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SolutionSet)
        Rpc.SolutionSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Rpc.internal_static_SolutionSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Rpc.internal_static_SolutionSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Rpc.SolutionSet.class, Rpc.SolutionSet.Builder.class);
      }

      // Construct using Rpc.SolutionSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSolutionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (solutionBuilder_ == null) {
          solution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          solutionBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Rpc.internal_static_SolutionSet_descriptor;
      }

      public Rpc.SolutionSet getDefaultInstanceForType() {
        return Rpc.SolutionSet.getDefaultInstance();
      }

      public Rpc.SolutionSet build() {
        Rpc.SolutionSet result = buildPartial();
        if (!result.isInitialized()) {
          throw AbstractMessage.Builder.newUninitializedMessageException(result);
        }
        return result;
      }

      public Rpc.SolutionSet buildPartial() {
        Rpc.SolutionSet result = new Rpc.SolutionSet(this);
        int from_bitField0_ = bitField0_;
        if (solutionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            solution_ = java.util.Collections.unmodifiableList(solution_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.solution_ = solution_;
        } else {
          result.solution_ = solutionBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Rpc.SolutionSet) {
          return mergeFrom((Rpc.SolutionSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Rpc.SolutionSet other) {
        if (other == Rpc.SolutionSet.getDefaultInstance()) return this;
        if (solutionBuilder_ == null) {
          if (!other.solution_.isEmpty()) {
            if (solution_.isEmpty()) {
              solution_ = other.solution_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSolutionIsMutable();
              solution_.addAll(other.solution_);
            }
            onChanged();
          }
        } else {
          if (!other.solution_.isEmpty()) {
            if (solutionBuilder_.isEmpty()) {
              solutionBuilder_.dispose();
              solutionBuilder_ = null;
              solution_ = other.solution_;
              bitField0_ = (bitField0_ & ~0x00000001);
              solutionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSolutionFieldBuilder() : null;
            } else {
              solutionBuilder_.addAllMessages(other.solution_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Rpc.SolutionSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Rpc.SolutionSet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<Rpc.Solution> solution_ =
        java.util.Collections.emptyList();
      private void ensureSolutionIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          solution_ = new java.util.ArrayList<Rpc.Solution>(solution_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.Solution, Rpc.Solution.Builder, Rpc.SolutionOrBuilder> solutionBuilder_;

      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public java.util.List<Rpc.Solution> getSolutionList() {
        if (solutionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(solution_);
        } else {
          return solutionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public int getSolutionCount() {
        if (solutionBuilder_ == null) {
          return solution_.size();
        } else {
          return solutionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Rpc.Solution getSolution(int index) {
        if (solutionBuilder_ == null) {
          return solution_.get(index);
        } else {
          return solutionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder setSolution(
          int index, Rpc.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.set(index, value);
          onChanged();
        } else {
          solutionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder setSolution(
          int index, Rpc.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.set(index, builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder addSolution(Rpc.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.add(value);
          onChanged();
        } else {
          solutionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder addSolution(
          int index, Rpc.Solution value) {
        if (solutionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSolutionIsMutable();
          solution_.add(index, value);
          onChanged();
        } else {
          solutionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder addSolution(
          Rpc.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.add(builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder addSolution(
          int index, Rpc.Solution.Builder builderForValue) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.add(index, builderForValue.build());
          onChanged();
        } else {
          solutionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder addAllSolution(
          java.lang.Iterable<? extends Rpc.Solution> values) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, solution_);
          onChanged();
        } else {
          solutionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder clearSolution() {
        if (solutionBuilder_ == null) {
          solution_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          solutionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Builder removeSolution(int index) {
        if (solutionBuilder_ == null) {
          ensureSolutionIsMutable();
          solution_.remove(index);
          onChanged();
        } else {
          solutionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Rpc.Solution.Builder getSolutionBuilder(
          int index) {
        return getSolutionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Rpc.SolutionOrBuilder getSolutionOrBuilder(
          int index) {
        if (solutionBuilder_ == null) {
          return solution_.get(index);  } else {
          return solutionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public java.util.List<? extends Rpc.SolutionOrBuilder>
           getSolutionOrBuilderList() {
        if (solutionBuilder_ != null) {
          return solutionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(solution_);
        }
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Rpc.Solution.Builder addSolutionBuilder() {
        return getSolutionFieldBuilder().addBuilder(
            Rpc.Solution.getDefaultInstance());
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public Rpc.Solution.Builder addSolutionBuilder(
          int index) {
        return getSolutionFieldBuilder().addBuilder(
            index, Rpc.Solution.getDefaultInstance());
      }
      /**
       * <code>repeated .Solution solution = 1;</code>
       */
      public java.util.List<Rpc.Solution.Builder>
           getSolutionBuilderList() {
        return getSolutionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Rpc.Solution, Rpc.Solution.Builder, Rpc.SolutionOrBuilder>
          getSolutionFieldBuilder() {
        if (solutionBuilder_ == null) {
          solutionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Rpc.Solution, Rpc.Solution.Builder, Rpc.SolutionOrBuilder>(
                  solution_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          solution_ = null;
        }
        return solutionBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SolutionSet)
    }

    static {
      defaultInstance = new SolutionSet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SolutionSet)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Cell_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Cell_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Position_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Position_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Piece_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Piece_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PiecePosition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PiecePosition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_State_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Problem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Problem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Move_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Move_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Move_Source_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Move_Source_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Move_Destination_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Move_Destination_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Solution_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Solution_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SolutionSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SolutionSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,jp/ne/sakura/ogiekako/fm/rpc/proto/rpc" +
      ".proto\" \n\004Cell\022\013\n\003row\030\001 \001(\005\022\013\n\003col\030\002 \001(\005" +
      "\"7\n\010Position\022\023\n\004cell\030\001 \001(\0132\005.Cell\022\026\n\005own" +
      "er\030\002 \001(\0162\007.Player\"\277\001\n\005Piece\022\031\n\004type\030\001 \001(" +
      "\0162\013.Piece.Type\"\232\001\n\004Type\022\010\n\004NONE\020\001\022\006\n\002FU\020" +
      "\002\022\007\n\003KYO\020\003\022\007\n\003KEI\020\004\022\007\n\003GIN\020\005\022\007\n\003KIN\020\006\022\010\n" +
      "\004KAKU\020\007\022\006\n\002HI\020\010\022\006\n\002OU\020\t\022\006\n\002TO\020\n\022\014\n\010NARI_" +
      "KYO\020\013\022\014\n\010NARI_KEI\020\014\022\014\n\010NARI_GIN\020\r\022\007\n\003UMA" +
      "\020\016\022\007\n\003RYU\020\017\"C\n\rPiecePosition\022\025\n\005piece\030\001 " +
      "\001(\0132\006.Piece\022\033\n\010position\030\002 \001(\0132\t.Position",
      "\"e\n\005State\022&\n\016piece_position\030\001 \003(\0132\016.Piec" +
      "ePosition\022\025\n\004turn\030\002 \001(\0162\007.Player\022\016\n\006heig" +
      "ht\030\003 \001(\005\022\r\n\005width\030\004 \001(\005\"^\n\007Problem\022\025\n\005st" +
      "ate\030\001 \001(\0132\006.State\022\033\n\004rule\030\002 \001(\0162\r.Proble" +
      "m.Rule\022\r\n\005limit\030\003 \001(\003\"\020\n\004Rule\022\010\n\004HELP\020\001\"" +
      "\276\001\n\004Move\022\026\n\005mover\030\001 \001(\0162\007.Player\022\034\n\006sour" +
      "ce\030\002 \001(\0132\014.Move.Source\022&\n\013destination\030\003 " +
      "\001(\0132\021.Move.Destination\032\035\n\006Source\022\023\n\004cell" +
      "\030\001 \001(\0132\005.Cell\0329\n\013Destination\022\023\n\004cell\030\001 \001" +
      "(\0132\005.Cell\022\025\n\005piece\030\002 \001(\0132\006.Piece\"\037\n\010Solu",
      "tion\022\023\n\004move\030\001 \003(\0132\005.Move\"*\n\013SolutionSet" +
      "\022\033\n\010solution\030\001 \003(\0132\t.Solution* \n\006Player\022" +
      "\n\n\006HITHER\020\001\022\n\n\006YONDER\020\002B)\n\"jp.ne.sakura." +
      "ogiekako.fm.rpc.protoB\003Rpc"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Cell_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Cell_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Cell_descriptor,
        new java.lang.String[] { "Row", "Col", });
    internal_static_Position_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Position_descriptor,
        new java.lang.String[] { "Cell", "Owner", });
    internal_static_Piece_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Piece_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Piece_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_PiecePosition_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_PiecePosition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PiecePosition_descriptor,
        new java.lang.String[] { "Piece", "Position", });
    internal_static_State_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_State_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_State_descriptor,
        new java.lang.String[] { "PiecePosition", "Turn", "Height", "Width", });
    internal_static_Problem_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Problem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Problem_descriptor,
        new java.lang.String[] { "State", "Rule", "Limit", });
    internal_static_Move_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Move_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Move_descriptor,
        new java.lang.String[] { "Mover", "Source", "Destination", });
    internal_static_Move_Source_descriptor =
      internal_static_Move_descriptor.getNestedTypes().get(0);
    internal_static_Move_Source_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Move_Source_descriptor,
        new java.lang.String[] { "Cell", });
    internal_static_Move_Destination_descriptor =
      internal_static_Move_descriptor.getNestedTypes().get(1);
    internal_static_Move_Destination_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Move_Destination_descriptor,
        new java.lang.String[] { "Cell", "Piece", });
    internal_static_Solution_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Solution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Solution_descriptor,
        new java.lang.String[] { "Move", });
    internal_static_SolutionSet_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_SolutionSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SolutionSet_descriptor,
        new java.lang.String[] { "Solution", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
